apply plugin: 'com.android.application'

// 配置所有android构建过程需要的参数
android {
    // 用于编译的SDK版本
    compileSdkVersion compileSdk
    // 用于Gradle编译项目的工具版本
    buildToolsVersion buildTools
    // 项目默认配置
    defaultConfig {
        // 引用第三方库的jar文件，都有可能会触发这个错误，api 'com.android.support:multidex:1.0.3'，在Application类的attachBaseContext方法添加MultiDex.install(this);
        multiDexEnabled true
        // 应用程序包名
        applicationId "com.chenyacheng.component"
        // 最低、最高支持Android版本
        minSdkVersion minSdk
        maxSdkVersion maxSdk
        // 目标版本
        targetSdkVersion targetSdk
        // 版本号
        versionCode versionCode
        // 版本名称
        versionName versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    buildTypes {
        // 调试版本
        debug {
            // minifyEnabled是否启用混淆
            minifyEnabled false
            // Zipalign优化
            zipAlignEnabled true
            // 加载默认混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        // 发布版本
        release {
            // minifyEnabled是否启用混淆
            minifyEnabled false
            // 删除无效的Resource
            shrinkResources false
            // Zipalign优化
            zipAlignEnabled true
            // 加载默认混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        disable 'GoogleAppIndexingWarning'
    }

    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }
}

dependencies {
    if (isBuildModule.toBoolean()) {
        implementation project(':commonuilib')
    } else {
        implementation project(':homecomponent')
        implementation project(':findcomponent')
        implementation project(':mecomponent')
        implementation project(':commonuilib')
    }
}